// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.Instrument", b =>
                {
                    b.Property<Guid>("InstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstrumentId");

                    b.ToTable("Instruments");

                    b.HasData(
                        new
                        {
                            InstrumentId = new Guid("37fd861a-fa59-4d04-a6ee-0f079fa0500b"),
                            InstrumentName = "Guitar"
                        },
                        new
                        {
                            InstrumentId = new Guid("01c45c45-4604-4db6-b353-dbfc15ced363"),
                            InstrumentName = "Drums"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Laptop", b =>
                {
                    b.Property<Guid>("LaptopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SpecificationsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LaptopId");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            LaptopId = new Guid("18e5f968-f51a-4adf-9d29-8b390b52cbb4"),
                            ModelName = "HP Pavilion",
                            SpecificationsId = new Guid("34993c7a-06c4-4835-96e6-05c47f1e7f2c")
                        },
                        new
                        {
                            LaptopId = new Guid("fd237286-ca2b-4830-b94a-e48f25772447"),
                            ModelName = "HP Spectre",
                            SpecificationsId = new Guid("6737e9a7-b81e-4e41-9c4b-c20730415c7a")
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Musician", b =>
                {
                    b.Property<Guid>("MusicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MusicianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusicianId");

                    b.ToTable("Musicians");

                    b.HasData(
                        new
                        {
                            MusicianId = new Guid("eb5ce884-b570-40ca-ba7e-006b905aa3cf"),
                            MusicianName = "Harry"
                        },
                        new
                        {
                            MusicianId = new Guid("36dd3bd3-c888-45ed-b0db-d966d7059137"),
                            MusicianName = "Larry"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Passenger", b =>
                {
                    b.Property<Guid>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PassengerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerId = new Guid("467fa548-3232-420a-99ee-55bf4241ba7e"),
                            PassengerName = "Andrew",
                            VehicleId = new Guid("f5793c67-e077-4431-a47b-75109657a4df")
                        },
                        new
                        {
                            PassengerId = new Guid("bc14e0fe-955b-4926-b244-f41b85f5733c"),
                            PassengerName = "Sarah",
                            VehicleId = new Guid("f5793c67-e077-4431-a47b-75109657a4df")
                        },
                        new
                        {
                            PassengerId = new Guid("317df3bb-a784-44d3-8dd0-c1e63d81b8ee"),
                            PassengerName = "Chris",
                            VehicleId = new Guid("a6a96beb-062d-44d1-81cb-f868b371c3dd")
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Specifications", b =>
                {
                    b.Property<Guid>("SpecificationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LaptopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Memory")
                        .HasColumnType("int");

                    b.HasKey("SpecificationsId");

                    b.HasIndex("LaptopId")
                        .IsUnique();

                    b.ToTable("LaptopSpecifications");

                    b.HasData(
                        new
                        {
                            SpecificationsId = new Guid("34993c7a-06c4-4835-96e6-05c47f1e7f2c"),
                            Cpu = "Intel i7",
                            Gpu = "Nvidia RTX 4070",
                            LaptopId = new Guid("18e5f968-f51a-4adf-9d29-8b390b52cbb4"),
                            Memory = 32
                        },
                        new
                        {
                            SpecificationsId = new Guid("6737e9a7-b81e-4e41-9c4b-c20730415c7a"),
                            Cpu = "AMD Ryzen 5",
                            Gpu = "Nvidia 1650 Ti",
                            LaptopId = new Guid("fd237286-ca2b-4830-b94a-e48f25772447"),
                            Memory = 16
                        });
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLayer.Models.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("DataLayer.Models.Vehicle", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = new Guid("f5793c67-e077-4431-a47b-75109657a4df"),
                            VehicleType = "car"
                        },
                        new
                        {
                            VehicleId = new Guid("a6a96beb-062d-44d1-81cb-f868b371c3dd"),
                            VehicleType = "Boat"
                        });
                });

            modelBuilder.Entity("InstrumentMusician", b =>
                {
                    b.Property<Guid>("InstrumentsInstrumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MusiciansMusicianId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstrumentsInstrumentId", "MusiciansMusicianId");

                    b.HasIndex("MusiciansMusicianId");

                    b.ToTable("MusicianInstrument", (string)null);
                });

            modelBuilder.Entity("DataLayer.Models.Passenger", b =>
                {
                    b.HasOne("DataLayer.Models.Vehicle", "Vehicle")
                        .WithMany("Passengers")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DataLayer.Models.Specifications", b =>
                {
                    b.HasOne("DataLayer.Models.Laptop", "Laptop")
                        .WithOne("Specifications")
                        .HasForeignKey("DataLayer.Models.Specifications", "LaptopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.HasOne("DataLayer.Models.UserType", "Type")
                        .WithMany("Users")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("InstrumentMusician", b =>
                {
                    b.HasOne("DataLayer.Models.Instrument", null)
                        .WithMany()
                        .HasForeignKey("InstrumentsInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Musician", null)
                        .WithMany()
                        .HasForeignKey("MusiciansMusicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Laptop", b =>
                {
                    b.Navigation("Specifications")
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataLayer.Models.Vehicle", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
